<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">
	<description>Spring公共配置</description>
	
	<bean id="dataSourceUsersys" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${proxoolusersys.driver-class}" />
		<property name="driverUrl" value="${proxoolusersys.driver-url}" />
		<property name="user" value="${proxoolusersys.user}" />
		<property name="password" value="${proxoolusersys.password}" />
		<property name="alias" value="${proxoolusersys.alias}" />
		<property name="houseKeepingTestSql" value="${proxoolusersys.house-keeping-test-sql}"/>
		<property name="testBeforeUse" value="true"/>
		<property name="testAfterUse" value="true"/>
		<property name="maximumConnectionCount" value="${proxoolusersys.maximum-connection-count}" />
		<property name="minimumConnectionCount" value="${proxoolusersys.minimum-connection-count}" />
		<property name="delegateProperties" value="characterEncoding=${proxoolusersys.characterEncoding}" />
		<property name="simultaneousBuildThrottle" value="${proxoolusersys.simultaneousBuildThrottle}" />
		<property name="prototypeCount" value="${proxoolusersys.prototype-count}" />
	</bean>
	  
	<bean id="dataSourceUsersysQuery" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${proxoolusersysQuery.driver-class}" />
		<property name="driverUrl" value="${proxoolusersysQuery.driver-url}" />
		<property name="user" value="${proxoolusersysQuery.user}" />
		<property name="password" value="${proxoolusersysQuery.password}" />
		<property name="alias" value="${proxoolusersysQuery.alias}" />
		<property name="houseKeepingTestSql" value="${proxoolusersysQuery.house-keeping-test-sql}"/>
		<property name="testBeforeUse" value="true"/>
		<property name="testAfterUse" value="true"/>
		<property name="maximumConnectionCount" value="${proxoolusersysQuery.maximum-connection-count}" />
		<property name="minimumConnectionCount" value="${proxoolusersysQuery.minimum-connection-count}" />
		<property name="delegateProperties" value="characterEncoding=${proxoolusersysQuery.characterEncoding}" />
		<property name="simultaneousBuildThrottle" value="${proxoolusersysQuery.simultaneousBuildThrottle}" />
		<property name="prototypeCount" value="${proxoolusersysQuery.prototype-count}" />
	</bean>
	
	<!-- 自动扫描Service,使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.power.service,com.zhrt.service">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> 
	</context:component-scan>
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.power.entity,com.zhrt.entity,com.zhrt.bo" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*/*Mapper.xml" />
		
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 自动扫描dao -->
		<property name="basePackage" value="com.power.dao,com.zhrt.dao" />
		<property name="annotationClass" value="com.system.dao.MyBatisRepository"/>
	</bean>
	<context:annotation-config />
	<!-- 事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
     <!-- 配置事物的传播特性 -->
     <tx:advice id="txAdvice" transaction-manager="transactionManager">
	  <tx:attributes>
	   <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
       <tx:method name="del*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  		
	   <tx:method name="modify*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
	   <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
	   <tx:method name="find*" read-only="true"/>
	   <tx:method name="get*" read-only="true"/>
	   <tx:method name="select*" read-only="true"/>
	   <tx:method name="*" propagation="SUPPORTS" />
	  </tx:attributes>
	 </tx:advice>
    <!--把事务控制在Service层-->
     <aop:config>
	  <aop:pointcut id="canyin" expression="execution(* com.*.service.*.*(..))"/>
	  <aop:advisor advice-ref="txAdvice" pointcut-ref="canyin" />
	 </aop:config>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven proxy-target-class="true"/>
	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/config/jdbc.properties" />	
		 <!-- 数据源配置,使用应用内的连接池 -->
	 	<bean id="dataSource" class="com.system.util.datasource.DynamicDataSource">
		    <property name="targetDataSources">
		        <map key-type="java.lang.String">
		            <entry value-ref="dataSourceUsersys" key="dataSourceUsersys"></entry>
		            <entry value-ref="dataSourceUsersysQuery" key="dataSourceUsersysQuery"></entry>
		        </map>
		    </property>
		    <property name="defaultTargetDataSource" ref="dataSourceUsersys" ></property>
		</bean>
	</beans>
	  
</beans>